()=>{const test=_async(()=>{let promiseResolve;let num=++index;messages.push("start "+num);// place of interest
// place of interest
return _continue(_for(()=>!!promise,void 0,()=>{messages.push("wait "+num);return _awaitIgnored(promise);}),()=>{promise=new Promise(r=>{promiseResolve=r;});return _call(wait,()=>{promise=null;promiseResolve();messages.push("stop "+num);});});});let index=0;let promise=null;let messages=[];function wait(){return Promise.resolve();}return Promise.all([test(),test(),test()]).then(()=>messages);}