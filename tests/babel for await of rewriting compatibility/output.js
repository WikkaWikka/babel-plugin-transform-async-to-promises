function _asyncIterator(iterable){var method,async,sync,retry=2;for("undefined"!=typeof Symbol&&(async=Symbol.asyncIterator,sync=Symbol.iterator);retry--;){if(async&&null!=(method=iterable[async]))return method.call(iterable);if(sync&&null!=(method=iterable[sync]))return new AsyncFromSyncIterator(method.call(iterable));async="@@asyncIterator",sync="@@iterator";}throw new TypeError("Object is not async iterable");}function AsyncFromSyncIterator(s){function AsyncFromSyncIteratorContinuation(r){if(Object(r)!==r)return Promise.reject(new TypeError(r+" is not an object."));var done=r.done;return Promise.resolve(r.value).then(function(value){return{value:value,done:done};});}return AsyncFromSyncIterator=function(s){this.s=s,this.n=s.next;},AsyncFromSyncIterator.prototype={s:null,n:null,next:function(){return AsyncFromSyncIteratorContinuation(this.n.apply(this.s,arguments));},return:function(value){var ret=this.s.return;return void 0===ret?Promise.resolve({value:value,done:!0}):AsyncFromSyncIteratorContinuation(ret.apply(this.s,arguments));},throw:function(value){var thr=this.s.return;return void 0===thr?Promise.reject(value):AsyncFromSyncIteratorContinuation(thr.apply(this.s,arguments));}},new AsyncFromSyncIterator(s);}const foo=_async(()=>{let _exit=false;var _iterator,_step;const out=[];var _iteratorAbruptCompletion=false;var _didIteratorError=false;var _iteratorError;return _continue(_finallyRethrows(()=>_catch(()=>{_iterator=_asyncIterator([1,2]);return _continueIgnored(_for(()=>_await(!!_iterator.next(),_iterator$next=>_iteratorAbruptCompletion=!(_step=_iterator$next).done),()=>!!(_iteratorAbruptCompletion=false),()=>{const item=_step.value;out.push(item);}));},err=>{_didIteratorError=true;_iteratorError=err;}),(_wasThrown,_result)=>{return _continue(_finallyRethrows(()=>_invokeIgnored(()=>{if(_iteratorAbruptCompletion&&_iterator.return!=null){return _awaitIgnored(_iterator.return());}}),(_wasThrown2,_result2)=>{if(_didIteratorError){throw _iteratorError;}return _rethrow(_wasThrown2,_result2);}),_result2=>_exit?_result2:_rethrow(_wasThrown,_result));}),_result=>_exit?_result:out);});export default foo;foo().then(console.log);